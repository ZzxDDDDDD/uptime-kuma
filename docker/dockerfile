ARG BASE_IMAGE=louislam/uptime-kuma:base2

############################################
# Build in Golang
# Run npm run build-healthcheck-armv7 in the host first, otherwise it will be super slow where it is building the armv7 healthcheck
# Check file: builder-go.dockerfile
############################################
FROM louislam/uptime-kuma:builder-go AS build_healthcheck

############################################
# Build in Node.js
############################################
FROM louislam/uptime-kuma:base2 AS build
USER root 
WORKDIR /app

ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1
COPY --chown=999:996 .npmrc .npmrc
COPY --chown=999:996 package.json package.json
COPY --chown=999:996 package-lock.json package-lock.json
RUN npm ci --omit=dev
COPY . .
COPY --chown=999:996 --from=build_healthcheck /app/extra/healthcheck /app/extra/healthcheck
RUN mkdir ./data
RUN mkdir -p data/upload && chown -R 999:996 data/upload
RUN chown -R 999:996 /app
RUN npm install --save node-global-proxy
RUN npm install
RUN npm run build

############################################
# ‚≠ê Main Image
############################################
FROM $BASE_IMAGE AS release
USER 999
WORKDIR /app

LABEL org.opencontainers.image.source="https://github.com/louislam/uptime-kuma"

ENV UPTIME_KUMA_IS_CONTAINER=1

# Copy app files from build layer
COPY --chown=999:996 --from=build /app /app

EXPOSE 3001
HEALTHCHECK --interval=60s --timeout=30s --start-period=180s --retries=5 CMD extra/healthcheck
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
CMD ["node", "server/server.js"]

############################################
# Rootless Image
############################################
FROM release AS rootless
USER 999

############################################
# Mark as Nightly
############################################
FROM release AS nightly
RUN npm run mark-as-nightly

FROM nightly AS nightly-rootless
USER 999
